#!/bin/sh
# shellcheck disable=SC2016,SC2129

# ~/etc/setup/profile {{{

##
# ~/.profile generator
##

set -e # stop on uncaught error

# Config {{{
TMP_PROFILE="${HOME}/.profile.tmp"
BAK_PROFILE="${HOME}/.profile.bak"
# Config }}}

# Add warning message {{{
{
	echo '#!/bin/sh'
	echo ''
	echo '##                                                                            ##'
	echo '#                              !!! IMPORTANT !!!                               #'
	echo '#                                                                              #'
	echo '#               DO NOT MODIFY - FILE GENERATED BY ~/etc/profile                #'
	echo '#                                                                              #'
	echo '#                                                                              #'
	echo '#                            Mi volas vidi morgaux                             #'
	echo '#                                                                              #'
	echo '#                                                                              #'
	echo '##                                                                            ##'
	echo ''
	echo '# Shell Environment Detection ___' | sed 's/_/{/g'
	echo 'CURRENT_SHELL="$(ps | awk "/$$/ {print \$NF; exit 0}")"'
	echo 'export CURRENT_SHELL'
	echo '# Shell Environment Detection ___' | sed 's/_/}/g'
	echo ''
} > "$TMP_PROFILE" # Create new temporary file
# Add warning message }}}

# Add environment setup scripts to temporary file {{{
for FILE in aliases           \
            setup/startup     \
            setup/environment \
            setup/directory   \
            setup/welcome     # welcome must be last file added
do
	# strip shebang lines
	sed -n '/#!\/bin/!p' "${HOME}/etc/${FILE}" >> "$TMP_PROFILE"
done
# Add environment setup scripts to temporary file }}}

# Auto install vim plugins {{{
{
	echo ''
	echo '# Automatic installer for vim plugins ___' | sed 's/_/{/g'
	echo 'VIM_PLUGIN_INSTALLER="${HOME}/etc/installers/vim-plugins"'
	echo 'if [ -x "$VIM_PLUGIN_INSTALLER" ]'
	echo 'then'
	echo '	( "$VIM_PLUGIN_INSTALLER" </dev/null >/dev/null 2>&1 & )'
	echo 'fi'
	echo '# Automatic installer for vim plugins ___' | sed 's/_/}/g'
	echo ''
} >> "$TMP_PROFILE"
# Auto install vim plugins }}}

# Auto commit vim spelling changes {{{
{
	echo '' ;
	echo '# Automatic Spelling Commit ___' | sed 's/_/{/g'
	echo 'auto_update_vim_spelling_file() {' ;
	echo '	COMMIT_MESSAGE="Automatic spelling commit"' ;
	echo '	SPELL_DIR="vim/spell"' ;
	echo '	ETC_DIR="${HOME}/etc"' ;
	echo '	TMP_DIR="${HOME}/tmp"' ;
	echo '' ;
	echo '	# These dirs must exist to continue' ;
	echo '	if [ ! -d "$TMP_DIR" ] || [ ! -d "${ETC_DIR}/${SPELL_DIR}" ]' ;
	echo '	then' ;
	echo '		return' ;
	echo '	fi' ;
	echo '' ;
	echo '	for spell_file in "${ETC_DIR}/${SPELL_DIR}"/*.add' ;
	echo '	do' ;
	echo '		ADD_FILE="$(basename "$spell_file")"' ;
	echo '		sort -i "$spell_file" | uniq > "${TMP_DIR}/${ADD_FILE}.tmp"' ;
	echo '		grep -Ev '\''<<|>>|=='\'' "${TMP_DIR}/${ADD_FILE}.tmp" > "$spell_file"' ;
	echo '	done' ;
	echo '' ;
	echo '	( cd "$ETC_DIR" && git commit -m "$COMMIT_MESSAGE" "$SPELL_DIR" )' ;
	echo '}' ;
	echo '' ;
	echo '( auto_update_vim_spelling_file </dev/null >/dev/null 2>&1 & )' ;
	echo '' ;
	echo '# Automatic Spelling Commit ___' | sed 's/_/}/g'
	echo '' ;
} >> "$TMP_PROFILE"
# Auto commit vim spelling changes }}}

# Auto startx, MUST be last section added to temporary file {{{
{
	echo ''
	echo '# Automatic startx ___' | sed 's/_/{/g'
	echo 'if [ -z "$DISPLAY"             ] &&'
	echo '   [ -n "$XDG_VTNR"            ] &&'
	echo '   [ "$XDG_VTNR" -eq 1         ] &&'
	echo '   [ "$TERM" = "linux"         ] &&'
	echo '   [ -x "$(command -v startx)" ]'
	echo 'then'
	echo '	START="$(date +%s)"'
	echo '	END="$START"'
	echo '	_DELTA_T="1"'
	echo '	_TIMEOUT="5"'
	echo '	[ -x ~/bin/uf ] && ~/bin/uf'
	echo '	if [ -x "$(command -v fortune)" ]'
	echo '	then'
	echo '		echo ""'
	echo '		fortune -as'
	echo '		echo ""'
	echo '	fi'
	echo '	echo "Starting X in..."'
	echo '	while true'
	echo '	do'
	echo '		END="$(date +%s)"'
	echo '		_DELTA_T="$((END - START))"'
	echo '		if [ "$_DELTA_T" -lt "$_TIMEOUT" ]'
	echo '		then'
	echo '			echo "$((_TIMEOUT - _DELTA_T))"'
	echo '			sleep 1'
	echo '		else'
	echo '			break'
	echo '		fi'
	echo '	done'
	echo '	startx'
	echo 'fi'
	echo '# Automatic startx ___' | sed 's/_/}/g'
	echo ''
} >> "$TMP_PROFILE"
# Auto startx, MUST be last section added to temporary file }}}

# Replace old file {{{
[ -f ~/.profile ] && cat ~/.profile > "$BAK_PROFILE" # make a back up

rm -f ~/.profile # remove old file
mv "$TMP_PROFILE" ~/.profile # replace profile from temporary file

[ -f ~/.profile ] || cat "$BAK_PROFILE" > ~/.profile # restore backup on failure

chmod 755 ~/.profile # make new profile executable
# Replace old file }}}

exit 0 # exit success

# ~/etc/setup/profile }}}


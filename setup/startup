#!/bin/sh

# ~/etc/setup/startup {{{

# Helper functions {{{
# run command singleton in background
run_one_instance_in_bg() { # {{{
	# shellcheck disable=SC2009
	if [ -x "$(command -v "$1")" ]
	then
		# shellcheck disable=2068
		ps cax | grep -iq "$1" || ( sh -c $@ &)
	fi
} # }}}

# function to safely pull git repos
git_pull_dir() { # {{{
	( cd "$1" && git pull </dev/null >/dev/null 2>&1 & )
} # }}}

# manage the vim spelling file
automatically_update_vim_spelling_file() { # {{{
	COMMIT_MESSAGE="Automatic spelling commit"
	SPELL_DIR="vim/spell"
	ETC_DIR="$HOME/etc"
	TMP_DIR="$HOME/tmp"

	# These dirs must exist to continue
	if [ ! -d "$TMP_DIR" ] || [ ! -d "${ETC_DIR}/${SPELL_DIR}" ]
	then
		return
	fi

	for spell_file in "${ETC_DIR}/${SPELL_DIR}"/*.add
	do
		sort -i "$spell_file" | uniq > "${TMP_DIR}/$(basename "$spell_file")".tmp
		cat "${TMP_DIR}/$(basename "$spell_file")".tmp > "$spell_file"
	done

	cd "$ETC_DIR" && git commit -m "$COMMIT_MESSAGE" "$SPELL_DIR"
} # }}}
# Helper functions }}}

# Arch linux specific startups {{{
if [ -x "$(command -v sudo)"                ] &&
   [ -x "$(command -v pacman)"              ] &&
   [ -x "$(command -v "$(sudo -l pacman)")" ]
then
	#
	# Clear the package cache
	#
	# When I set up my arch-box, I was way to conservative on my
	# partitioning scheme and so while my /home has plenty of space,
	# running `pacman -Syu` often fails due to /var getting filled up
	# with cached package versions, which I don't care about.
	#
	(yes | sudo pacman -Sccq >/dev/null 2>&1 &)
fi
# Arch linux specific startups }}}

# Start ups that require Xorg {{{
if [ -n "$DISPLAY" ] && xset q >/dev/null 2>&1
then
	run_one_instance_in_bg "xbanish"
	run_one_instance_in_bg "redshift"

	xrdb "$HOME/.Xresources"
fi >/dev/null 2>&1 # hide error stream for the if...fi block
# Start ups that require Xorg }}}

# Keep repos up to date - spawn "git pull" daemons {{{
if [ -x "$(command -v git)" ]
then
	# pull git repos in home
	for i in "$HOME/bin"      \
	         "$HOME/etc"      \
	         "$HOME/src/sude" \
	         "$HOME/src/kata" \
	         ~/uni/*
	do
		git_pull_dir "$i"
	done

	# commit spelling changes to vim spelling files
	( automatically_update_vim_spelling_file </dev/null >/dev/null 2>&1 & )
fi </dev/null >/dev/null 2>&1 # block all io streams for the if...fi block
# Keep repos up to date - spawn "git pull" daemons }}}

# ~/etc/setup/startup }}}


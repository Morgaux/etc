#!/bin/sh

# ~/etc/vim-plugins {{{

#
# Auto git cloner for vim plugins
#

# Retry if offline {{{
if ! ping -q -w 1 -c 1 8.8.8.8 >/dev/null 2>&1
then
	#echo "host is offline, cannot check vim plugins" 1>&2

	(sleep 5 && exec "$0" &) &

	exit 1
fi
# Retry if offline }}}

# Config {{{
BUNDLE_DIR="$HOME/etc/vim/bundle"
AUTOLOAD_DIR="$HOME/etc/vim/autoload"
PATHOGEN_URL="https://tpo.pe/pathogen.vim"
INSTALL_ONLY="FALSE"
SELF="$(basename "$0")"
# Config }}}

# Helper functions {{{
err() {
	echo "$@" 1>&2
}

die() {
	err "${SELF}: ERROR: $@"
	exit 1
}
# Helper functions }}}

# Start up validation {{{
if [ ! -d "$BUNDLE_DIR" ]
then
	mkdir -p "$BUNDLE_DIR"
fi

if [ ! -d "$AUTOLOAD_DIR" ]
then
	mkdir -p "$AUTOLOAD_DIR"
fi

if [ ! -x "$(command -v git)" ]
then
	die "git is not installed"
fi

if [ ! -x "$(command -v curl)" ]
then
	die "curl is not installed"
fi

if ! curl -LSso "${AUTOLOAD_DIR}/pathogen.vim" "$PATHOGEN_URL"
then
	err "${SELF}: WARNING: Could not install ${PATHOGEN_URL}"
fi
# Start up validation }}}

# Function to validate a repo URL {{{
validate() { # $1:url
	if ! git ls-remote "$1" 1>/dev/null 2>&1
	then
		die "$1 is an invalid repo url"
	fi
}
# Function to validate a repo URL }}}

# Function to clone a repo to a directory, or pull if the directory exists {{{
clone_or_pull() { # $1:url $2:destdir
	if [ ! -d "$2" ]
	then
		mkdir -p "$2"
	fi

	_PREV_DIR="$(pwd)"
	cd "$2"

	if [ -d "$(basename "$1")" ]
	then
		if [ "$INSTALL_ONLY" = "TRUE" ]
		then
			err "Skipping ${1}..."
		else
			cd "$(basename "$1")"

			err "Updating ${1}..."

			validate "$1"

			if ! git pull 1>/dev/null 2>&1
			then
				die "git pull $1 failed"
			fi
		fi
	else
		err "Installing ${1}..."

		validate "$1"

		if ! git clone "$1" 1>/dev/null 2>&1
		then
			die "git clone -depth=1 $1 failed"
		fi
	fi

	cd "$_PREV_DIR"
}
# Function to clone a repo to a directory, or pull if the directory exists }}}

# Arg parsing {{{
while [ "$#" -gt 0 ]
do
	case "$1" in
		"-i")
			INSTALL_ONLY="TRUE";
		;;
		"--install-only")
			if [ "$#" -gt 1 ]
			then
				if [ "$2" = "TRUE" ] || [ "$2" = "FALSE" ]
				then
					INSTALL_ONLY="$2"
				else
					die "option $1 can be 'TRUE' or 'FALSE'"
				fi

				shift
			else
				die "option $1 requires a boolean argument"
			fi
		;;
		*)
			break
		;;
	esac

	shift
done
# Arg parsing }}}

# Main loop, run through all plugin repositories listed {{{
for PLUG_FILE in "${BUNDLE_DIR}/.plugins.github" "${BUNDLE_DIR}/.plugins.gitlab"
do
	DOMAIN="$(echo "$PLUG_FILE" | sed 's/.*\.plugins\.\(.*\)$/\1/g')"

	if [ ! -f "$PLUG_FILE" ]
	then
		echo "$PLUG_FILE doesn't exist, skipping..." 1>&2
		continue
	fi

	for REPO in $(tr '\n' ' ' < "$PLUG_FILE")
	do
		clone_or_pull "https://${DOMAIN}.com/${REPO}" "$BUNDLE_DIR"
	done
done
# Main loop, run through all plugin repositories listed }}}

# ~/etc/vim-plugins }}}


"
" https://gitlab.com/morgaux/etc
" Author:   Morgaux Meyer
" License:  MIT (C) Morgaux Meyer
"

" Package Management {{{

" start pathogen
execute pathogen#infect()
filetype plugin indent on

" options for https://github.com/lifepillar/vim-mucomplete
set completeopt+=menuone
set completeopt+=noselect
set completeopt+=noinsert

" options for https://github.com/airblade/vim-gitgutter
set updatetime=100
hi link GitGutterAdd    Todo
hi link GitGutterChange Normal
hi link GitGutterDelete Error

" options for https://github.com/neovimhaskell/haskell-vim
let g:haskell_enable_quantification   = 1 " enable highlighting 'forall'
let g:haskell_enable_recursivedo      = 1 " enable highlighting 'mod' & reg'
let g:haskell_enable_arrowsyntax      = 1 " enable highlighting 'proc'
let g:haskell_enable_pattern_synonyms = 1 " enable highlighting 'pattern'
let g:haskell_enable_typeroles        = 1 " enable highlighting type roles
let g:haskell_enable_static_pointers  = 1 " enable highlighting 'static'
let g:haskell_backpack                = 1 " enable highlighting backpacks
let g:haskell_indent_if               = 3 " indent 'if then else' to condition
let g:haskell_indent_case             = 5 " indent 'case' to expression
let g:haskell_indent_let              = 4 " indent 'let' to expression
let g:haskell_indent_where            = 6 " indent 'where' to expression
let g:haskell_indent_before_where     = 0 " indent leading expression to 'where'
let g:haskell_indent_after_bare_where = 6 " indent naked 'where'
let g:haskell_indent_do               = 3 " indent 'do' to expression
let g:haskell_indent_in               = 0 " match 'in' indent to 'let'
let g:haskell_indent_guard            = 2 " indent '|' guard

" Package Management }}}

" Generic Options {{{

" misc options
set belloff=all
set showcmd
set nohlsearch
set nu
set ruler
set report=1
set nocompatible
set showtabline=2
set laststatus=2
set ignorecase
set smartindent
set backspace=indent,eol,start
set incsearch
set wildmenu
set mouse=a
set mousemodel=popup
set mouseshape=a:beam
set textwidth=80
set colorcolumn=+1
set foldmethod=marker
set whichwrap=b,s,<,>,[,]

" wrap lines that are longer than the terminal window
set wrap linebreak nolist

" Tabs must be eight wide!!!
set tabstop=8 softtabstop=0 shiftwidth=8 noexpandtab

" No line numbers if the term is too narrow for 80 chars
if &columns < 85
	set nonu
endif

" Generic Options }}}

" Typing Settings {{{

" Enable spell checking
set spell spelllang=en_nz

" Abbreviations and custom Autocorrections
abbreviate teh       the
abbreviate th        the
abbreviate te        the
abbreviate intrest   interest
abbreviate bussiness business
abbreviate ech       each
abbreviate eah       each

" Typing Settings }}}

" Language Specific Options {{{

" Override language specific settings
autocmd Filetype python       setlocal           softtabstop=4 shiftwidth=4   expandtab nowrap
autocmd Filetype scala        setlocal           softtabstop=4 shiftwidth=4   expandtab nowrap
autocmd Filetype java         setlocal           softtabstop=4 shiftwidth=4   expandtab nowrap
autocmd Filetype cs           setlocal           softtabstop=4 shiftwidth=4   expandtab nowrap
autocmd Filetype cshtml       setlocal           softtabstop=4 shiftwidth=4   expandtab nowrap
autocmd Filetype cshtml.html  setlocal           softtabstop=4 shiftwidth=4   expandtab nowrap
autocmd Filetype haskell      setlocal           softtabstop=4 shiftwidth=4   expandtab nowrap
autocmd Filetype sh           setlocal tabstop=8 softtabstop=0 shiftwidth=8 noexpandtab nowrap
autocmd Filetype vim          setlocal tabstop=8 softtabstop=0 shiftwidth=8 noexpandtab nowrap
autocmd Filetype c            setlocal tabstop=8 softtabstop=0 shiftwidth=8 noexpandtab nowrap foldmethod=syntax foldnestmax=1
autocmd Filetype cpp          setlocal tabstop=8 softtabstop=0 shiftwidth=8 noexpandtab nowrap foldmethod=syntax foldnestmax=1
autocmd Filetype make         setlocal tabstop=8 softtabstop=0 shiftwidth=8 noexpandtab nowrap
autocmd Filetype tex          setlocal tabstop=8 softtabstop=0 shiftwidth=8 noexpandtab nowrap

" Language Specific Options }}}

" Visual and Syntax Options {{{

" enable syntax
syntax on

" Colours and highlighting
set t_Co=256                  " use 256 colors
set t_ut=""                   " disable background erase
set t_8f=[38;2;%lu;%lu;%lum " set foreground color
set t_8b=[48;2;%lu;%lu;%lum " set background color
set t_Co=256                  " Enable 256 colors
set termguicolors             " Enable GUI colors for the terminal to get truecolor
set background=dark           " ahhhhhh my eyes!!
let loaded_matchparen = 1     " prevent annoying paren matching

" Catch whitespace errors
match Error /\s\+$\| \+\ze\t/
au InsertEnter * redraw!
au InsertLeave * redraw!

" Show tabs as comments
set list
set listchars=tab:\|\ 
match Comment /\t/

" Set colorscheme (after other highlight settings)
colo PaperColor

" Visual and Syntax Options }}}

" Settings Stolen from JCS {{{

"
" I've shamelessly stolen this stuff, although it's quite good so I don't mind
"
" http://github.com/jcs/dotfiles
" Author: Joshua Stein
" License: none
"
" Don't pollute directories with swap files, keep them in one place
silent !mkdir -p ~/.vim/backup/
silent !mkdir -p ~/.vim/swp/
set backupdir=~/.vim/backup//
set directory=~/.vim/swp//
" ...except crontab, which will complain that it can't see any changes
au FileType crontab setlocal bkc=yes

" Settings Stolen from JCS }}}


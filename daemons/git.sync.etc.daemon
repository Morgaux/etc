#!/bin/sh

# https://gitlab.com/morgaux/bin
# @Author:	Morgaux Meyer
# @License:	MIT (C) 2019



################################################################################
#                                     Headers                                  #
################################################################################

# shellcheck source=/dev/null
include() {
	_INC_DIR="$(dirname "$0" 2>/dev/null || echo ".")"
	if [ -d "$_INC_DIR" ] && . "${_INC_DIR}/${1}"
	then
		return
	fi
	echo "Error: include $*" 1>&2
	exit 1
}

include config.daemon
include util.daemon
include git.util.daemon

_TARGET_DIR="$HOME/etc"
_SYNC_TIMEOUT="600" # 10 minutes



################################################################################
#                            Function definitions                              #
################################################################################

git_sync_repo() { # $1 : root directory of repo
	cd "$1" || die "Could not enter directory: $1"

	log "Syncing $1..."

	if git_is_pull_needed && git_will_pull_succeed
	then
		git pull
	fi

	cd "$RUN_DIR" || die "Could not return to RUN_DIR: $RUN_DIR"
}

# main function
main() {
	[ -x "$(command -v git)" ] || die "Git is not installed."
	[ -d "$_TARGET_DIR" ] || die "Target directory does not exist."
	git_is_dir_repo || die "Target directory is not a git repo."

	while true
	do
		git_sync_repo "$_TARGET_DIR"
		sleep "$_SYNC_TIMEOUT"
	done
}



################################################################################
#                                  Run daemon                                  #
################################################################################

main_wrapper "$@"

# exit success
exit 0

